rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{documents=**} {
      allow read, write: if false;
    }
    
    match /users/{userId} {
      allow read: if isLoggedIn();
      allow create: if belongsTo(userId);
      
      match /income-expense/{incomeId} {
        allow read: if belongsTo(userId);
        allow create: if canCreateIncomeExpense(userId);

        allow delete: if belongsTo(userId);
      }
    }

    function isLoggedIn() {
      return request.auth.uid != null;
    }

    function belongsTo(userId) {
      return request.auth.uid == userId; 
    }

    function canCreateIncomeExpense(userId) {
      let isSignedIn = request.auth.uid != null;
      let isOwner = request.auth.uid == userId;
      let isAmountNumber = request.resource.data.amount is number;
      let isAmountPositive = request.resource.data.amount >= 0;
      let isDescriptionString = request.resource.data.description is string;
      let isNotTooLong = request.resource.data.description.size() <= 100;
      let isNotTooShort = request.resource.data.description.size() > 0;
      let isTypeIncomeExpense = request.resource.data.type == 'income' || request.resource.data.type == 'expense';
      
      return isSignedIn && isOwner && isAmountNumber && isAmountPositive && isDescriptionString && isNotTooLong && isNotTooShort && isTypeIncomeExpense;
    }
  }
}